-- ATUALIZANDO TODAS AS IDADE PARA MAIS UM ANO DE VIDA
UPDATE TAB_DEPENDENTE
SET IDADE = IDADE +1;

-- CRIAÇÃO DA TABELA TAB_RH_DEMITIDOS PARA TESTE.
CREATE TABLE TAB_RH_DEMITIDOS (COD_FUNCIONARIO VARCHAR(5));


-- INSERÇÕES DE REGISTROS
INSERT INTO TAB_RH_DEMITIDOS VALUES ('F0001');
INSERT INTO TAB_RH_DEMITIDOS VALUES ('F0005');
INSERT INTO TAB_RH_DEMITIDOS VALUES ('F0012');
INSERT INTO TAB_RH_DEMITIDOS VALUES ('F0022');
INSERT INTO TAB_RH_DEMITIDOS VALUES ('F0033');


--  SELECTS PARA INFORMAÇÕES GERAIS DE CADA TABELA
SELECT * FROM TAB_RH_DEMITIDOS;
SELECT * FROM TAB_FUNCIONARIO;
SELECT * FROM TAB_DEPENDENTE;


-- CONSULTA COM LEFT JOIN ENTRE 3 TABELA. TAB_FUNCIONARIO,TAB_DEPENDENTE E TAB_RH_DEMITIDOS
SELECT 
    F.COD_FUNCIONARIO   AS COD_FUNC,
    DP.COD_FUNCIONARIO AS COD_DEP
FROM TAB_RH_DEMITIDOS RH
LEFT JOIN TAB_FUNCIONARIO F
    ON RH.COD_FUNCIONARIO = F.COD_FUNCIONARIO
LEFT JOIN TAB_DEPENDENTE DP 
    ON F.COD_FUNCIONARIO = DP.COD_FUNCIONARIO
;


/* DELETANDO TODOS OS DEEPENDENTES DOS FUNCIONARIOS COM CODIGO IGUAL A DA TABELA TAB_RH_DEMITIDOS
POIS J� QUE O FUNCIONARIO SER� DEITIDO, N�O � POSSIVEL TER UM DEPENDENTE
*/
DELETE FROM TAB_DEPENDENTE DP
WHERE DP.COD_FUNCIONARIO IN (SELECT 
                                RH.COD_FUNCIONARIO  AS COD_RH
                            FROM TAB_RH_DEMITIDOS RH
                            INNER JOIN TAB_FUNCIONARIO F
                                ON RH.COD_FUNCIONARIO = F.COD_FUNCIONARIO);
                                
-- DELETANDO TODOS OS FUNCIONARIOS COM CODIGO IGUAL A DA TABELA TAB_RH_DEMITIDOS
DELETE FROM TAB_FUNCIONARIO F 
WHERE F.COD_FUNCIONARIO IN (SELECT 
                                RH.COD_FUNCIONARIO  AS COD_RH
                            FROM TAB_RH_DEMITIDOS RH
                            INNER JOIN TAB_FUNCIONARIO F
                                ON RH.COD_FUNCIONARIO = F.COD_FUNCIONARIO);
                                
