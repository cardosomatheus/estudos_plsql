--              CRIA��O OU ALTERA��O DE UMA PROCEDDURES E FUN��ES

--PROCEDUTE COM PROPOSITO DE INCLUS�O DE REGISTROS NA TABELA SEGMERCADO
CREATE OR REPLACE PROCEDURE INCLUIR_SEGMERCADO
(P_ID IN SEGMERCADO.ID%TYPE, P_DESCRICAO IN SEGMERCADO.DESCRICAO%TYPE)
IS
BEGIN
    INSERT INTO SEGMERCADO VALUES(P_ID,UPPER(P_DESCRICAO));
    COMMIT;
END;


--PROCEDUTE COM PROPOSITO DE INCLUS�O DE REGISTROS NA TABELA PRODUTO_EXERCICIO
CREATE OR REPLACE PROCEDURE INCLUINDO_PRODUTO
(P_COD IN PRODUTO_EXERCICIO.COD%TYPE, 
 P_DESCRICAO IN PRODUTO_EXERCICIO.DESCRICAO%TYPE,
 P_CATEGORIA IN PRODUTO_EXERCICIO.CATEGORIA%TYPE)
IS 
BEGIN
    INSERT INTO PRODUTO_EXERCICIO VALUES(P_COD,initcap(P_DESCRICAO),INITCAP(P_CATEGORIA));
    COMMIT;
END;

--PROCEDUTE COM PROPOSITO DE ALTERA��O DE REGISTROS NA TABELA PRODUTO_EXERCICIO
CREATE OR REPLACE PROCEDURE ALTERANDO_CATEGORIA_PRODUTO
(P_COD IN PRODUTO_EXERCICIO.COD%TYPE, 
 P_CATEGORIA IN PRODUTO_EXERCICIO.CATEGORIA%TYPE)
IS
BEGIN
    UPDATE PRODUTO_EXERCICIO
    SET  CATEGORIA = initcap(P_CATEGORIA) 
    WHERE COD = P_COD;
    COMMIT;
END;


--PROCEDUTE COM PROPOSITO DE EXCLUS�O DE REGISTROS NA TABELA PRODUTO_EXERCICIO
CREATE OR REPLACE PROCEDURE EXCLUINDO_PRODUTO 
(P_COD IN PRODUTO_EXERCICIO.COD%TYPE)
IS
BEGIN
    DELETE FROM PRODUTO_EXERCICIO 
    WHERE COD = P_COD;
    COMMIT;
END;


--PROCEDUTE COM PROPOSITO DE INCLUS�O DE REGISTROS NA TABELA CLIENTE COM VALORES DENTRO DE VARIAVEIS
CREATE OR REPLACE PROCEDURE INCLUIR_CLIENTE
(P_ID IN CLIENTE.ID%TYPE,
 P_RAZAO IN CLIENTE.RAZAO_SOCIAL%TYPE,
 P_CNPJ IN CLIENTE.CNPJ%TYPE,
 P_SEGMERCADO IN CLIENTE.SEGMERCADO_ID%TYPE,
 P_FATURAMENTO IN CLIENTE.FATURAMENTO_PREVISTO%TYPE)
IS
    v_CATEGORIA CLIENTE.CATEGORIA%TYPE;
BEGIN
    v_CATEGORIA := CATEGORIA_CLIENTE(P_FATURAMENTO);
    INSERT INTO CLIENTE 
    VALUES(P_ID,P_RAZAO,P_CNPJ,P_SEGMERCADO,SYSDATE,P_FATURAMENTO,V_CATEGORIA);
    COMMIT;
END;


--PROCEDUTE COM PROPOSITO DE INCLUS�O DE REGISTROS NA TABELA CLIENTE COM VALORES DENTRO DE VARIAVEIS
CREATE OR REPLACE PROCEDURE INCLUINDO_DADOS_VENDA
(P_ID IN PRODUTO_VENDA_EXERCICIO.ID%TYPE,
 P_COD_PRODUTO IN PRODUTO_VENDA_EXERCICIO.COD_PRODUTO%TYPE,
 P_DATA IN PRODUTO_VENDA_EXERCICIO.DATA%TYPE,
 P_QTDE IN PRODUTO_VENDA_EXERCICIO.QUANTIDADE%TYPE,
 P_PRECO IN PRODUTO_VENDA_EXERCICIO.PRECO%TYPE)
IS
    V_VALOR_TOTAL PRODUTO_VENDA_EXERCICIO.VALOR_TOTAL%TYPE;
    V_PERCENTUAL_IMPOSTO PRODUTO_VENDA_EXERCICIO.PERCENTUAL_IMPOSTO%TYPE;
BEGIN
    V_VALOR_TOTAL := P_QTDE * P_PRECO;
    V_PERCENTUAL_IMPOSTO := RETORNA_IMPOSTO(P_COD_PRODUTO);
    INSERT INTO PRODUTO_VENDA_EXERCICIO
    VALUES(P_ID,P_COD_PRODUTO,TO_DATE(P_DATA,'DD/MM/YYYY'),P_QTDE,P_PRECO,V_VALOR_TOTAL,V_PERCENTUAL_IMPOSTO);
    COMMIT;
END;


-- A FUN��O DEFINE A CATEGORIA DO CLIENTE ATRAV�S DO FATURAMENTO E RETORNA ATRAV�S DA FUN��O.
CREATE OR REPLACE FUNCTION CATEGORIA_CLIENTE
(P_FATURAMENTO IN CLIENTE.FATURAMENTO_PREVISTO%TYPE)
RETURN CLIENTE.CATEGORIA%TYPE
IS
    V_CATEGORIA CLIENTE.CATEGORIA%TYPE;
BEGIN
    IF P_FATURAMENTO <= 10000 THEN
        V_CATEGORIA := 'PEQUENO';
    ELSIF P_FATURAMENTO > 10000 AND P_FATURAMENTO <= 50000 THEN
        V_CATEGORIA := 'MEDIO';
    ELSIF P_FATURAMENTO > 50000 AND P_FATURAMENTO <= 100000 THEN
        V_CATEGORIA := 'MEDIO GRANDE';
    ELSE
        V_CATEGORIA := 'GRANDE';
    END IF;
    RETURN V_CATEGORIA;
END;



-- FUN��O COM O RETORNO DO CAMPO CATEGORIAS DE ACORDO COM O ID SELECIONADO.
CREATE OR REPLACE FUNCTION RETORNA_CATEGORIA
(P_COD IN PRODUTO_EXERCICIO.COD%TYPE)
RETURN PRODUTO_EXERCICIO.CATEGORIA%TYPE
IS
    V_CATEGORIA PRODUTO_EXERCICIO.CATEGORIA%TYPE;
BEGIN
    SELECT CATEGORIA INTO V_CATEGORIA FROM PRODUTO_EXERCICIO WHERE COD = P_COD; 
    RETURN V_CATEGORIA;
END;


--  A FUN��O DEFINE O IMPOSTO A SER ADICIONADO POR PRODUTO DE ACORDO COM A CATEGORIA INFORMADA 
CREATE OR REPLACE FUNCTION RETORNA_IMPOSTO 
(P_COD_PRODUTO produto_venda_exercicio.cod_produto%type)
RETURN produto_venda_exercicio.percentual_imposto%type
IS
   v_CATEGORIA produto_exercicio.categoria%type;
   v_IMPOSTO produto_venda_exercicio.percentual_imposto%type;
BEGIN
    v_CATEGORIA := retorna_categoria(P_COD_PRODUTO);
    IF TRIM(v_CATEGORIA) = 'Sucos de Frutas' THEN
        v_IMPOSTO := 10;
    ELSIF  TRIM(v_CATEGORIA) = '�guas' THEN
        v_IMPOSTO := 20;
    ELSIF  TRIM(v_CATEGORIA) = 'Mate' THEN
        v_IMPOSTO := 15;
    END IF;
    RETURN v_IMPOSTO;
END;
