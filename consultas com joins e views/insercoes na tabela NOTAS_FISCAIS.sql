SELECT
    max(numero)
FROM itens_notas_fiscais;


-- inner joinn com duas tabelas
SELECT  NF.MATRICULA,
        TV.NOME,
        COUNT(*) AS NMR_NOTAS 
FROM NOTAS_FISCAIS NF
    INNER JOIN TABELA_DE_VENDEDORES TV
    ON NF.MATRICULA = TV.MATRICULA
GROUP BY NF.MATRICULA, TV.NOME;


-- Usando O HAVING em conjunto com o inner join

SELECT  INF.CODIGO_DO_PRODUTO, 
        TP.NOME_DO_PRODUTO,
        SUM(INF.QUANTIDADE)     
FROM ITENS_NOTAS_FISCAIS INF 
    INNER JOIN TABELA_DE_PRODUTOS TP
    ON INF.CODIGO_DO_PRODUTO  = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO
HAVING SUM(INF.QUANTIDADE) > 54000 
ORDER BY SUM(INF.QUANTIDADE) DESC;

-- Retornando o cliente que nunca fez uma compra na empresa
SELECT DISTINCT 
    TC.CPF  AS CPF_CADASTRO,
    TC.NOME AS NOME_CLIENTE   
FROM TABELA_DE_CLIENTES TC
LEFT JOIN NOTAS_FISCAIS NF
ON TC.CPF = NF.CPF
WHERE NF.CPF IS NULL;


-- Vendedores que não possuem clientes em seu bairro
SELECT DISTINCT
    TV.NOME     AS NOME_VENDEDOR,
    TV.BAIRRO   AS BAIRRO_DO_VENDEDOR,
    TC.NOME     AS NOME_CLIENTE,
    TC.BAIRRO   AS BAIRRO_DO_CLIENTE
FROM TABELA_DE_CLIENTES TC
    RIGHT JOIN TABELA_DE_VENDEDORES TV
    ON TV.BAIRRO = TC.BAIRRO
WHERE TC.BAIRRO IS NULL;

-- 
-- SOMANDO O TOTAL DE IMPOSTOS PAGOS NO ANO DE 2016.
SELECT
    TRUNC(SUM(NF.IMPOSTO)) AS TOTAL_IMPOSTO,
    TO_CHAR(NF.DATA_VENDA,'YYYY')
FROM NOTAS_FISCAIS NF
INNER JOIN itens_notas_fiscais IT
    ON NF.NUMERO = IT.NUMERO
WHERE TO_CHAR(NF.DATA_VENDA,'YYYY') = '2016'
GROUP BY TO_CHAR(NF.DATA_VENDA,'YYYY');
